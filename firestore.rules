rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
         
    // match /{document=**} {
    //   allow read: if true;
    // }
    // Users
    match /users/{userId} {
    //  function leagueId() {
    // 	return request.resource.data.leagues.keys();
    // }
      allow read: if request.auth != null;
      allow create: if request.auth != null;
     // allow update: if request.auth != null && request.auth.uid == userId;
      // allow league admins and club manager to make updates
      allow update: if request.auth != null 
    //  && request.resource.data.leagues.keys() != []
    //  &&  resource.data.leagues.keys().hasAll(leagueId());
     //FIXME && (request.resource.data.leagues.diff(resource.data.leagues).affectedKeys()
      //  .hasAll(leagueId()));
    }



  // League
    match /leagues/{leagueId} {

    function isOwner() {
        return request.auth != null && get(/databases/$(database)/documents/leagues/$(leagueId)).data.ownerId == request.auth.uid;
    }
    function isAdmin() {
        return  request.auth != null && get(/databases/$(database)/documents/leagues/$(leagueId)).data.admins[request.auth.uid] != null;
    }

      allow read: if true;
      allow create: if request.auth != null;
      allow update: if isAdmin();
      allow delete: if isOwner();
      allow update: if request.auth != null && (request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['acceptedClubs']));
      // Standings
      match /stats/standings {
        allow read: if request.auth != null;
        allow update: if isAdmin();
      }
      // Player Total Stats
      match /stats/players {
        allow write: if request.auth != null;
         allow read: if request.auth != null;
      }
      // Player Match Stats
      match /stats/players/playerMatches/{matchId} {
        allow write: if request.auth != null;
         allow read: if request.auth != null;
      }
    // Transfers
      match /stats/transfers {
        allow create, update, read: if request.auth != null;
        // TODO if is manager
      }
    }
    // Clubs
      match /{path=**}/clubs/{clubId} {
    function isAdmin() {
     return request.auth != null && get(/databases/$(database)/documents/$(path)).data.admins[request.auth.uid] != null;
    }

      function isNotScheduled() {
      return get(/databases/$(database)/documents/$(path)).data.scheduled == false
    }
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth != null && request.auth.uid == resource.data.managerId || isAdmin();
        allow delete: if request.auth != null && request.auth.uid == resource.data.managerId && isNotScheduled();
        allow delete: if isAdmin();

        // allow player to create entry in the club's roster
      allow update: if request.auth != null && (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['roster']));
      // allow read, update, delete: if   debug(isAdmin());
      }
          // Matches
      match /{path=**}/matches/{matchId} {
        allow read: if request.auth != null;
        allow update: if request.auth != null && resource.data.conflict == false;

        
        // && (request.resource.data.diff(resource.data).affectedKeys()
        // .hasOnly(['submissions', 'players', 'motmSubmissions']))
      }
  }
}