rules_version = '2';
service cloud.firestore {
  // match /databases/{database}/documents {
  //   match /{document=**} {
  //     allow read, write: if
  //         request.time < timestamp.date(2022, 1, 2);
  //   }
  // }

  match /databases/{database}/documents {

    match /{document=**} {
      allow read: if true;
    }
    // Users
    match /users/{userId} {
     function leagueId() {
    	return request.resource.data.leagues.keys();
    }
      allow create: if request.auth != null;
      allow update: if request.auth.uid == userId;
      // allow league admins and club manager to make updates
      allow update: if request.auth != null 
      &&  resource.data.leagues.keys().hasAll(leagueId())
      && (request.resource.data.leagues.diff(resource.data.leagues).affectedKeys()
        .hasOnly(leagueId()));
    }

  // League
    match /leagues/{league} {
      function isAdmin() {
      return request.auth != null && resource.data.adminId == request.auth.uid;
    }
      allow create: if request.auth != null;
      allow update, delete: if isAdmin();
      // Club
      match /clubs/{club} {
        allow create: if request.auth != null;
        allow update, delete: if request.auth != null && request.auth.uid == resource.data.managerId
        // allow player to create entry in the club's roster
        allow update: if request.auth != null && (request.resource.data.diff(resource.data).affectedKeys()
        .hasOnly(['roster']));
      }
    }
  }
}